~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Followed this guide to setup dotfiles repo/tracking:
https://wiki.archlinux.org/title/Dotfiles

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Ran these commands to setup the repo:
$ git init --bare ~/.dotfiles
$ alias dotfiles='/usr/bin/git --git-dir="$HOME/.dotfiles/" --work-tree="$HOME"'
$ dotfiles config status.showUntrackedFiles no

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Run these commands to replicate on a new system:
$ git clone --bare <git-repo-url> $HOME/.dotfiles
$ alias dotfiles='/usr/bin/git --git-dir="$HOME/.dotfiles/" --work-tree="$HOME"'
$ dotfiles checkout
$ dotfiles config --local status.showUntrackedFiles no

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
To add and push changes to the dotfiles repo:
dt add ./changed_file_name_here
dt commit -m "change message here"
dt push

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
To checkout these dotfiles onto a new machine:

- First glone to a temp directory:
1. git clone --separate-git-dir=$HOME/.dotfiles https://github.com/mgmourgos/dotfiles.git $HOME/dotfiles-tmp

- Then copy the temp directory contents into ~/
2. cp -a ~/dotfiles-tmp/. ~

3. Restart shell to get bashrc aliases for "dt"

- Run this to hide untracked files again:
4. dotfiles config --local status.showUntrackedFiles no

5. rm -rf dotfiles-tmp/

- Install nvim package manager:
6. Goto https://github.com/wbthomason/packer.nvim and install packer using:
> git clone --depth 1 https://github.com/wbthomason/packer.nvim\
 ~/.local/share/nvim/site/pack/packer/start/packer.nvim

7. Open packer.lua, and shoutout ":so", then ":PackerSync"
- Now packer plugins should be installed

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
To pull changes from the repo onto the current machine:
> dt pull

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Windows setup - install a nerd font, in my case "InconsolataGo"
1. Download the nerd font zip file
2. Right click the .ttf file and click "install"
3. In windows terminal, go to Settings > Ubuntu > Appearance > Font Face
4. Set the newly added font to "InconsolataGo Nerd Font"

This will allow the usage of speacial unicode characters for a fancy bash
prompt which is set in the .bashrc

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
